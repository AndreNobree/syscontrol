CREATE DATABASE siscontrol;
\connect siscontrol;

-- Tabela de níveis
CREATE TABLE niveis (
    id SERIAL PRIMARY KEY,
    nomenivel VARCHAR(50) NOT NULL,
    nivel INTEGER NOT NULL
);

INSERT INTO niveis (nomenivel, nivel) VALUES
('operador', 1),
('assistente', 2),
('administrador', 3);

-- Tabela de usuários
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    usuario VARCHAR(255) NOT NULL,
    senha VARCHAR(255) NOT NULL,
    idnivel INTEGER NOT NULL REFERENCES niveis(id)
);

-- Tabela de categorias
CREATE TABLE categorias (
    id SERIAL PRIMARY KEY,
    categoria VARCHAR(255) NOT NULL
);

INSERT INTO categorias (categoria) VALUES
('Frios e Laticínios'),
('Alimentos Perecíveis'),
('Alimentos não Perecíveis'),
('Frutas e Legumes'),
('Produtos de Limpeza'),
('Higiene Pessoal'),
('Pet Shop'),
('Bebidas'),
('Carnes e Peixes'),
('Congelados'),
('Produtos para Automóveis'),
('Padaria'),
('Saúde e Bem-estar'),
('Enlatados e Conservas'),
('Produtos de Festival e Datas Comemorativas'),
('Diversos'),
('Mercearia'),
('Produtos para Bebês');

-- Tabela de produtos
CREATE TABLE produtos (
    id SERIAL PRIMARY KEY,
    codigo VARCHAR(255) NOT NULL,
    produto VARCHAR(255) NOT NULL,
    idcat INTEGER NOT NULL REFERENCES categorias(id),
    preco NUMERIC NOT NULL,
    quantidade INTEGER NOT NULL,
    desconto VARCHAR(10),
    precoprazo NUMERIC,
    precocompra NUMERIC,
    idfornecedor VARCHAR(255),
    garantia INTEGER,
    comissao VARCHAR(255),
    dataalteracao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de caixa
CREATE TABLE caixa (
    id BIGSERIAL PRIMARY KEY,
    iduser INTEGER NOT NULL REFERENCES users(id),
    idProduto INTEGER NOT NULL REFERENCES produtos(id),
    quantidade INTEGER NOT NULL,
    codigo VARCHAR(255),
    produto VARCHAR(255),
    preco NUMERIC NOT NULL,
    desconto VARCHAR(10),
    precodesc NUMERIC,
    total NUMERIC
);

-- Tabela de clientes
CREATE TABLE clientes (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    celular VARCHAR(255),
    telefone VARCHAR(20),
    tipo VARCHAR(255),
    cpf_cnpj VARCHAR(30),
    inscricao VARCHAR(255),
    cep VARCHAR(10),
    endereco VARCHAR(255),
    complemento VARCHAR(255),
    bairro VARCHAR(255),
    cidade VARCHAR(255),
    estado CHAR(2),
    email VARCHAR(255)
);

-- Tabela de fornecedores
CREATE TABLE fornecedor (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    cnpj VARCHAR(255) NOT NULL,
    endereco VARCHAR(255),
    cidade VARCHAR(255),
    estado CHAR(2),
    cep VARCHAR(10),
    telefone VARCHAR(20),
    email VARCHAR(255),
    dataregistro VARCHAR(255),
    ativo BOOLEAN DEFAULT TRUE,
    contrato VARCHAR(255)
);

-- Tabela de relatórios de venda
CREATE TABLE relatoriovenda (
    id BIGSERIAL PRIMARY KEY,
    id_usuario INTEGER NOT NULL REFERENCES users(id),
    id_cliente INTEGER REFERENCES clientes(id),
    data_venda TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    total NUMERIC NOT NULL,
    forma_pagamento VARCHAR(255)
);
CREATE TABLE lucrosvenda (
  id SERIAL PRIMARY KEY,
  id_cliente INTEGER REFERENCES clientes(id),
  id_usuario INTEGER NOT NULL REFERENCES users(id),
  data_venda TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  lucro NUMERIC(10, 2) NOT NULL,
  id_produto INTEGER REFERENCES produtos(id),
  status BOOLEAN NOT NULL,
);

CREATE TABLE movimentacoes_estoque (
    id SERIAL PRIMARY KEY,
    id_produto INTEGER NOT NULL REFERENCES produtos(id),
    id_user INTEGER NOT NULL REFERENCES users(id),
    id_cliente INTEGER,
    fornecedor VARCHAR(255),
    tipo_movimento BOOLEAN NOT NULL,
    quantidade INTEGER NOT NULL CHECK (quantidade > 0),
    preco_unitario NUMERIC(10, 2) NOT NULL,
    valor_total NUMERIC(12, 2) GENERATED ALWAYS AS (quantidade * preco_unitario) STORED,
    data_movimento TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    status BOOLEAN NOT NULL,
);